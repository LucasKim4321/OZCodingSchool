----------------
## Flask
----------------

## Flask시작하기

# 개발환경 구성

anaconda파이썬과 R을 위한 오픈소스 패포판.
데이터과학, 머신러닝, 웹 개발 등 다양한 작업에 필요한 파이썬 컴파일러와 주요 파이썬 라이브러리, 파이썬 개발을 돕는 유틸리티를 포함.

장점
1. 라이브러리 관리 : 여러 라이브러리와 패키지를 쉽게 설치하고 관리할 수 있음
2. 환경 관리 : 프로젝트별로 필요한 라이브러리 버전을 쉽게 관리할 수 있다.
3. 크로스 플랫폼: 윈도우, 맥, 리눅스에서 모두 사용 가능.

Anaconda 설치

다운로드
https://www.anaconda.com/download

터미널 실행

아나콘다 설치 확인
conda --version

curl(Client URL)설치 확인
윈도우와 맥은 기본적으로 설치 되어 있음
curl --version

curl(Client URL)
다양한 프로토콜을 지원하는 명령행 기반의 네트워크 도구.
주로 웹 서버와 상호작용을 위해 사용되며 HTTP, HTTPS, FTP 등 다양한 프로토콜을 지원.
특히 플라스크와 fastAPI의 다양한 기능 테스트 시, POST 방식 요청을 테스트해야 할 때는 웹 주소 외에 특별한 방법이 필요합니다.
이를 간단히 테스트 할 수 있는 명령어가 curl입니다.

맥에서의 명령어 사용법 (윈도우와 차이)

맥
'{"key":'value"}'
"{\"key\":\"value\"}"

윈도우
"{\"key\":\"value\"}"
이것만 됨

curl 주요 옵션 (curl 명령어)

1. -X 또는 --request: 사용할 HTTP 메서드를 지정합니다.
curl -X POST http://example.com

2. -H 또는 --header: HTTP 헤더를 추가합니다.
curl -H "Content-Type: application/json" http://example.com

3. -d 또는 --data: POST 요청에 데이터를 담습니다.
curl -d "param1=value1&param2=value2" http://example.com

4. --data-raw: POST 요청에 원시 데이터를 담습니다.
curl --data-raw "raw data" http://example.com

5. -F 또는 --form: 멀티파트 폼 데이터를 전송합니다.
curl -F "file=@path/to/file" http://example.com/upload

6. -u 또는 --user: Basic 인증을 위한 사용자 이름과 패스워드를 지정합니다.
curl -u username:password http://example.com

7. -o 또는 --output: 출력 결과를 파일에 저장합니다.
curl -o output.html http://example.com

8. -I 또는 --head: 헤더 정보만을 출력합니다.
curl -I http://example.com

9. -v 또는 --verbose: 요청과 응답 정보를 자세히 출력합니다.
curl -v http://example.com

10. --location 또는 -L: 서버가 요청을 다른 위치로 리다이렉트하면 따라갑니다.
curl -L http://example.com

11. --cookie: 쿠키를 전송합니다.
curl --cookie "name=value" http://example.com

12. --cookie-jar: 응답으로 받은 쿠키를 파일에 저장합니다.
curl --cookie-jar cookies.txt http://example.com


파이썬 환경에서
플라스크 모듈 작동안할 시
pip3 install Flask
pip3 install Flask == 3.0.2