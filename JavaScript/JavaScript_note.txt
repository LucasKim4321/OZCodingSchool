----------------
## 자바스크립트
----------------

HTML은 마크업 언어, CSS는 스타일시트 언어.
자바스크립트는 프로그래밍 언어.

자바스크립트는 서버 개발, 어플리케이션 개발 등 다양한 목적을 위해 사용할 수 있는 언어이지만,
주된 활용 분야는 '웹 개발'이다.

웹 개발이란?
인터넷을 통해 서비스되는 웹사이트를 개발하는 일

# 역할
웹브라우저 및 하위 객체가 가진 기능을 구동하거나
HTML/CSS를 통해 렌더링된 화면을 조작할 수 있다.

자바스크립트는 프로그래밍 언어로써, 소프트웨어적 대상에게 병령을 내리는 역할을 수행한다.
여기에서 소프트웨서적 대상이랑, 웹브라우저, 웹 요소, 웹 스타일 등을 의미한다.
명령을 내리고픈 대상에 자바스크립트 명령을 전달하면, 다음 절차대로 작업이 이루어진다.

입력 -> 처리 -> 출력

자바 스크립트 명령문으로 어떤 처리를 지시하고자 하는 대상을 가리켜 '객체'라고 한다.

입력: 객체에게 어떤 작업을 수행하라는 명령을 전달한다.
처리: 객체가 주어진 작업을 수행한다.
출력: 객체가 작업을 수행한 결과를 사용자에게 반환한다.

# 객체 다루는 방법
객체 이름을 선택하고, 뒤에 점(.)을 붙인 다음 전달하고자 하는 명령을 적어준다.

# 객체 명령의 두 가지 유형
객체.데이터  객체가 가지고 있는 데이터(정보)를 가리켜 일반적으로 '속성'이라 한다.
객체.기능()  객체가 가지고 있는 기능을 가리켜 일반적으로 '메소드'라 한다.

// 주석     한줄 주석
/* 주석 */  여러줄 주석

# 브라우저 객체 window


## 콘솔(console)
브라우저의 디버깅 콘솔.
window 하위 객체.

# 기본 사용법
window.console

브라우저 객체(window) 생략 가능
console

console.log() 
괄호안의 데이터를 콜솔을 통해 출력하는 명령
괄호안에는 자바스크립트 자료형만 들어갈 수 있다.

자료형 - 숫자, 문자열, 불리언, 다양한 목정과 형태의 객체


## 변수
변수를 만드는 작업을 '변수 선언'이라 부르고
만들어진 변수에 첫 데이터를 지정하는 작업을 '변수 초기화'라고 부른다.

# 변수 종류
var, let, const

var : 중복으로 선언하고 초기화, 수정 작업 가능.
let : 중복 선언이 불가능하고. 초기화,수정 작업 가능.
cont : 중복 선언이 불가능하고. 초기화만 가능. 선언과 초기화 작업을 동시에 해야함.
 
# 숫자 자료형
연산 기능 가능

# 문자열 자료형
문자열끼리 이어붙이기 (+) 가능


## window.prompt()
사용자로부터 문자열 입력을 받을 수 있는 다이얼 로그 박스를 열어주는 메소드.
입력된 문자열을 반환.
괄호안에 안내 문구 입력 가능.


## 템플릿 리터럴
문자열을 표현하는 또 다른 방법.
표현식을 내장할 수 있는 문자열 표현법
백틱(`)과 ${}을 사용해 표현

const data = "데이터"
const str = `문자열 중간에 ${data} 입력하기`

const str =`데이터 입력 ${promt('데이터 입력도 된다.')}`


## 불리언(boolean)
참과 거짓 여부를 나타내기 위해 사용하는 데이터
자바스크립트에서 불리언(boolean)은 true, false 이렇게 소문자로 쓴다. 파이썬에서는 앞글자가 대문자


## window.confirm()
확인과 취소 둘 중 하나를 선택할 수 있는 창을 띄움.
선택에 따라 true, false 반환.
괄호안에 안내 문구 입력 가능.


## DOM(Document Object Model)

웹브라우저는 HTML 문서를 해석하고, 화면을 통해 해석된 결과를 보여준다.
해석한 HTML 코드를 화면을 통해 보여주는 과정을 '렌더링'이라 한다.

브라우저는 HTML 코드를 해석해서 요소들을 트리 형태로 구조화해 표현하는 문서(객체)를 생성한다.
이를 DOM이라 하며, 브라우저는 DOM을 통해 화면에 웹 콘텐츠들을 렌더링한다.

DOM(Document Object Model)은 웹 콘텐츠를 추가, 수정, 삭제하거나 마우스 클릭, 키보드 타이핑 등 이벤트에 대한 처리를 정의할 수 있도록 제공되는 프로그래밍 인터페이스이다.

# DOM에 접근하는 방법
window.document 속성은 창이 포함한 문서를 참조한다.
window.document는 현재 브라우저에 렌더링되고 있는 문서를 의미하며, 이 속성을 이용하면 해당 문서에 접근할 수 있다.

window.documen는 페이지 콘텐츠, 즉 DOM에 대한 진입점 역할을 하는 프로그래밍 인터페이스이다.
이를 이용해 페이지의 정보를 얻거나 웹 요소를 생성 및 조작할 수 있다.

# document.querySelector()
document.querySelector() 메소드는 선택자를 인자로 전달받아, 전달받은 선택자와 일치하는 문서 내 첫 번째 요소(Element)를 반환한다.
일치하는 요소가 없으면 '없다'라는 의미의 'null' 데이터를 반환한다.
인자로 전달되는 선택자는 문자열 타입의 '유효한 CSS 선택자'를 의미한다.

document.querySelector("p")
document.querySelector("#text")
document.querySelector(".text")

# textContent()
textContent() 속석은 해당 객체(요소)가 포함하고 있는 텍스트 콘텐츠를 표현하는 속성이다.
textContent()를 통해 요소가 포함한 텍스트를 읽을 수도, 변경할 수도 있다.

const p = document.querySelector("p")
console.log(p.textContent)
p.textContent = "값 바꾸기 가능"