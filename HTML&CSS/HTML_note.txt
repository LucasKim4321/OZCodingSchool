웹 개발이란 인터넷과 웹을 통해 공유할 웹 사이트를 만드는 일과 이를 서비스하기 위해 필요한 다양한 환경을 구축하는 일을 뜻한다.
이를 위해 필요한 언어가 HTML, CSS

HTML하이터텍스트 마크업 랭귀지(HyperText Markup Language)
HyperText : 하이퍼링크를 통해 어떤 문서에서 다른 문서로 접근할 수 있는 텍스트
Markup : (콘텐츠를)표시하다. 보이는 영역(클라이언트)의 구조를 세우는 작업
Language : 언어

하이퍼텍스트와 콘텐츠를 표시해주는 언어!

HTML 문서(코드) -> 웹브라우저를 통해 코드해석 -> 표시

HTML은 1991년 웹의 창시자인 팀 버너스리에 의해 최초로 제안된 이후 지속적으로 발전해서 현재 HTML5가 웹 개발의 표준이 되었다.

HTML 코드는 결국 텍스트이다. 따라서 코드를 작성할 때는 메모장으로 대표되는 텍스트 편집 전용 프로그램은 사용해 'HTML 문서'를 만들어야 한다.
HTML 문서는 응용 프로그램에 따라 다른 형태로 열린다

웹 브라우저는 HTML문서를 해석해서 사용자가 볼 수 있게 화면에 표시해주는 프로그램. 크롬 추천.

코드 에디터는 특정 언어의 문서를 보다 편리하게 작성할 수 있게 도와주는 프로그램. VSCode, Eclipse, Spring, Springboot ...

## 기본 세팅
VSCode 설치
Live Server 플러그인 설치
Live Server 기본 사법용법
HTML 문서에서 Open with Live Server 선택하면 로컬 서버 환경에서 실행 (설정 바꾸기 가능)
오른쪽 하단에 열려있는 포트가 표시되는데 클릭하면 라이브 서버 종료.

## 태그의 기본 형태
<태그명>콘텐츠</태그명>

## 단일 태그 형태 2가지 (콘탠츠 생략이 가능할 때 사용)
<태그명>
<태그명/>

## HTML 태그 작성 유의 사항
태그 이름은 소문자로 쓴다
여는 태그와 다는 태그를 정확히 입력한다.
태그의 콘텐츠로 또 다른 태그가 포함될 수 있다.
들여쓰기를 적절하게 사용하는 것이 좋다(적극 권장)

## 속성(attributes)
속성은 태그의 부가적인 기능을 정의하는 것으로, 선택사항이다.
속성은 시작 태그의 내부에 정의한다.
개수 제한은 따로 없으며, 태그에 추가할 속성이 여러 개일 경우 각각을 구분하기 위해 공백을 사용해야한다.
속성을 추가한 태그는 속성으로 인해 형태가 바뀔 수도 있다.
겉으로 드러나지 않는 여러 속성도 존재한다.

<태그명 속성="값">콘텐츠</태그명>
<태그명 속성="값" />

## 주석
사람에게는 보이지만, 컴퓨터(웹브라우저)에게는 보이지 않는 코드
메모를 남기기 위해 사용

HTML 주석
<!-- 내용 -->

## HTML 문서 구조
<!DOCTYPE html> : 문서의 타입을 명시하는 용도
<html> : html을 구성하는 태그를 하나로 묶음
    사용가능한 속성 : lang(언어 지정), dir(텍스트의 방향 지정), manifest(오프라인에서 사용할 캐시 파일 지정)(html5에서 폐지됨)
    lang : 웹페이지가 사용하는 언어를 명시
        스크린 리더가 웹페이지의 언어를 인식하고, 해당 언어에 맞는 음성을 제공할 수 있습니다.
        크롬 브라우저에 있는 자동 번역 기능을 사용할 때, 웹페이지의 언어를 자동으로 감지하여 번역할 수 있습니다.
        검색 엔진이 웹페이지의 언어를 인식하고, 해당 언어로 검색 결과를 제공할 수 있습니다. 
<head> : 문서의 정보를 기입, 하위 태그로 meta(메타데이터), title(페이지제목), base(기준 url), style(문서스타일), link(외부 CSS 등을 연결), script(스크립트), noscript(자바스크립트 비활성시 동작)가 있음.
    meta : html 문서의  HTML 문서의 메타데이터(metadata)를 지정하는 데 사용됩니다.
        메타데이터는 문서의 정보(문자 인코딩, 뷰포트 설정, SEO 관련 정보 등)를 제공하며,
        브라우저나 검색 엔진이 웹페이지를 올바르게 해석하는 데 도움을 줍니다.
        핧 수 있는게 매우 많음. 웹페이지의 전반적인 동작과 데이터를 저장
<body> : 문서의 내용을 기입

<!DOCTYPE html>
<html>
    <head>
        문서의 정보
    </head>
    <body>
        문서의 내용
    </body>
</html>

p태그 p(paragraph)
문단 요소를 나타내는 태그
문단과 문단 사이에는 여백이 있음
<p>내용 내용</p>
<p>안녕하세요

h태그는 제목 요소를 나타내는 태그.
1일때 가장 크고 6일때 가장 작다
<h1>제목</h1>
<h6>제목</h6>

hr구분선 태그
<hr>

스페이스바는 한번만 허용.
엔터를 이용한 줄바꿈은 무시.

br태그를 사용해 줄바꿈

엔티티 코드를 이용해 여러개의 공백 적용가능
&nbsp;(공백)


## 요소의 구분
<블록 레벨 요소/>
    자기가 속한 영역의 너비를 모두 차지하여 블록을 형성한다.
<인라인 요소/>
    자기에게 필요한 만큼이 공간만 차지한다.

<mark>형광펜 효과</mark>
<strong>볼드 효과</strong>
<em>이탤릭체 효과</em>
<q>인용구("") 효과</q>
<s>취소선 효과</s>


## 컨테이너
콘텐츠나 레이아웃에 아무런 영향도 주지 않고, 여러 요소를 묶어서 관리하기 위해 사용하는 태그를 컨테이너라고 한다.

<div></div> : 블록 레벨 컨테이너
<span></span> : 인라인 레벨 컨테이너


## 전역속성(Global attributes)
모든 html태그에서 공통으로 사용할 수 있는 속성이다.
id : 요소에 고유한 이름을 부여하는 식별자
class : 요소를 그룹 별로 묶을 수 있는 식별자
style : 요소에 적용할 CSS 스타일 선언
title : 요소의 추가 정보를 제공하는 텍스트로, 툴팁을 제공함
등등 더 많은 정보는 여기 링크
https://developer.mozilla.org/ko/docs/Web/HTML/Global_attributes


## img태그
이미지를 표시할 때 사용하는 태그
<img src="url"/>

img태그 속성
alt(alternative) : 이미지 로딩에 실패한 경오 이미지 대신 텍스트 표시. 음성인식기가 이미지 대신 텍스트 읽어서 시각장애인에게도 서비스함.
width, height : 너비와 높이 지정. 기본 단위는 픽셀(px)

## a태그 a(anchor)
다른 페이지, 전화번호, 이메일주소 등 다양한 유형의 콘텐츠로 연결되는 링크(연결) 역할을 한다. 이때 href속성이 필요하다.
<a href="링크"></a>

a태그 속성
target : 페이지를 여는 방식 설정 self(현재페이지)(기본값),blank(새페이지)
<a href="링크" target="_self"></a>
<a href="링크" target="_blank"></a>


## 목록(list)
목록은 연관 있는 항목들을 나열한 것을 의미한다.

순서없는 목록 ul(unordered list)
<ul>
    <li></li>
    <li></li>
</ul>

순서있는 목록 ol(ordered list)
<ol>
    <li></li>
    <li></li>
</ol>

ol속성
start 어디서부터 시작할지 type 타입 설정


## 표(table)
행(row)(가로줄)과 열(column)(세로줄)로 구성된 표
셀(cell) : 행과 열이 마주치는 구간

<table> : 표를 나타내는 태그
<tr> : 하나의 행을 나타내는 태그
<th> : 행에서 제목에 해당하는 셀을 나타내는 태그
<td> : 행에서 콘텐츠에 해당하는 셀을 나타내는 태그

<table> border="1">
    <tr>
        <th></th>
        <th></th>
    </tr>
    <tr>
        <td></td>
        <td></td>
    </tr>
</table>

테이블 태그내에서 표에 대한 설명을 나타내는 태그
<caption>자막 내용</caption>

표의 구조를 명확하게 표현하기
<thead> : 표의 제목이나 주제를 나타내는 영역
<tbody> : 표의 본문을 나타내는 영역
<tfoot> : 표의 요약글이나 맺음말을 나타내는 영역

<table> border="1">
    <caption></caption>
    <thead>
    <tr>
        <th></th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    <tr>
        <td></td>
        <td></td>
    </tr>
    </tbody>
    <tfoot>
    <tr>
        <td></td>
        <td></td>
    </tr>
    </tfoot>
</table>

표(table) 심화

태그
tr (table row) : 행
td (table data) : 행의 내용
th (table heading) : 행, 열의 제목
caption : 표 제목
col / colgroup : 스타일 지정을 위한 열(그룹)
thead : 머리글
tfoot : 꼬리말
tbody : 본문

속성
scope="col" / scope="row" 열 또는 행의 제목
colspan="2" : 2칸 열병합
rowspan="3" : 3칸 행병합
span="3" : colgroup의 열의 갯수


## input(입력) 태그
데이터를 입력받는 태그
어떤 타입을 지정했는지에 따라, 같은 텍스트일지라도 그 목적이 달라진다

형식
<input type="데이터유형">

text : 기본값. 텍스트를 입력받는다.
email : 이메일 입력
password : 비밀번호 입력
search : 검색할 텍스트 입력
date : 날짜와 시간 입력
등등

수치를 입력받는 type의 속성
color : 색깔을 선택
number : 수치를 선택
range : 범위를 선택

# label태그
입력 요소에 라벨을 붙이는 역할

label태그 사용 방법

방법1
<label>
    아이디
    <input type="text">
</label>

방법2
<label for="pwd">비밀번호</label>
<input type="password" id="pwd">

## select태그 (드롭다운 메뉴)
옵션을 선택해서 입력할 수 있는 메뉴를 만든다.

기본 형식
<select>
    <option></option>
    <option></option>
    <option></option>
</select>


## textarea태그
여러줄의 텍스트를 입력받을 수 있는 태그

기본 형식
<textarea cols="10" rows="6"></textarea>


## progress태그
작업이 어느정도 진행되었는지를 바로 표현하는 태그

<progress value="60" max="100"></progress>


## button태그
클릭을 입력으로 받는 버튼 태그
input의 타입을 button으로 설정해도 똑같은 효과를 낼 수 있다.

기본 형식
<button>push</button>
<input type="button" value="push">


## form 태그
입력 양식을 만들어 주는 태그
사용자가 입력한 데이터를 서버로 보내는것을 목적으로 사용하는 태그
입력 요소들을 감싸서 입력한 값을 서버로 제출(submit)할 수 있다.

action : 입력값을 전송할 서버의 url
method : 클라이언트가 입력한 데이터를 어떤식으로 전송할지(GET or POST)

기본 형식 예
<form method="post" action="server_url">
    <input type="text">
    <input type="password">
    <input type="button" value="로그인"> form태그 안에서 버튼의 기본 동작은 submit임
</form>

GET : 서버에서 요청을 보내어 응답을 받아낸다.
POST : 서버에 요청을 보내어 작업을 수행한다. 추가/수정/삭제한다.

name 속성
서버가 정보를 받으면 name속성으로 항목을 구별한다.  


## 시맨틱(semantic) 태그
의미가 부여된 컨테이너
시맨틱은 '의미론적인'이라는 의미이다.
시맨틱 태그는 개발자와 브라우저에게 의미를 제공한다.
태그명은 요소가 가진 목적이나 역할이 무엇인가를 나타낸다.
검색 엔진에서 좋은 단서가 된다.

기본 형식
<의미>콘텐츠</의미>

장점
검색엔진은 시맨틱 태그(태그명)를 중요한 단서로 본다.
시각 장애가 있는 사용자가 화면 판독기로 페이지를 탐색할 때 참조된다.
코드의 가독성이 좋아진다.(의미가 부여된 컨테이너 사용)
컨테이너(div,span)의 남용을 방지할 수 있어 코드 쓰기가 편하다.

대표적인 시맨틱 태그들
<article> 독립적인 콘텐츠
<aside> 별도의 콘텐츠
<details> 추가적인 상세한 정보
<figcaption> figure의 자막
<figure> 설명 붙는 독립 콘텐츠
<footer> 맺음말
<header> 머릿말
<main> 주된 콘텐츠
<nav> 네비게이션 링크
<section> 콘텐츠의 한 섹션(절)
<summary> detail의 헤더
<time> 강조할 시간


## meta 태그
meta 태그는 HTML 문서에 대한 메타데이터를 정의한다.
메타데이터란 데이터에 대한 데이터, 즉 '정보'를 의미한다.
meta 태그는 항상 head 태그의 안에 들어가며, 읾반적으로 문자 세트, 페이지 설명, 키워드, 문서의 작성자 및 뷰포트 설정을 지정하는 데 사용된다.

meta 태그를 사용하는 이유?
웹페이지에 대한 정보를 제공하므로 검색엔진이 페이지를 검색할 때 참고할 수 있고, 검색 결과에도 반영할 수 있다.

meta 태그가 제공하는 메타데이터의 유형 & 속성은?
charset : 문자 세트
http-equiv : 콘텐츠 속성 정보에 대한 http 헤더
name : 문서 정보
content : 메타데이터 내용


## charset
문자 인코딩에 대한 요약 정보를 기입하는 속성이다.
문자 인코딩이랑 한글을 표시하기 위해 문자 세트를 지정하는 작업으로, 영문과 한글을 모두 사용하기 위해 utf-8방식을 사용하는것이 좋다.

<meta charset = "utf-8">

인코딩을 명확하게 기입해두지 않으면 웹브라우저 설정 상황에 따라 자동으로 인코딩을 추정해서 처리한다. 즉, 문자가 깨질 가능성이 생긴다.


## http-equiv
HTTP란 인터넷에서 데이터를 주고 받을 수 있는 프로토콜이다.
http-equiv가 http 관련 정보를 지정하면, content가 그에 대한 정보(값)를 지정한다.

IE 브라우저 최신 버전의 엔진을 사용한다는 의미
<meta http-equiv="x-ua-compatible" content="IE=edge">

페이지를 10초마다 새로고침 한다는 의미
<meta http-equiv="refresh" content="10">


## name
문서 정보를 제공
name 속성을 이름으로, content 속성을 값으로 하여 문서 정보를 이름+값 쌍의 형태로 제공할 때 사용할 수 있다.
검색 최적화에 도움이 되는 작업이다.

<meta name="author" content="페이지 작성자">
<meta name="description" content="페이지에 대한 요약 정보글">
<meta name="keywords" content="공부, 코딩, IT, 학습">


vscode에서
느낌표 누르고 엔터 또는 탭을 누르면 html 기본틀이 나온다


## audio 태그
<audio controls>
    <source src="url" type="audio/mpeg">
</audio>

## video 태그

## iframe 태그

